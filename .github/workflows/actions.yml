name: Run get_stock_data Python script

on:
  schedule:
    - cron: '30 21 * * *'  # Runs daily at 9:30 PM UTC, which is 11:30 PM UTC+2
  workflow_dispatch:  # Optional: allows manual trigger from GitHub UI

jobs:
  combine_csvs:
    runs-on: ubuntu-latest
    # Run this job only if the marker file does not exist in the main repository
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if combine_csvs has already run
      id: check_marker
      run: |
        if [ -f $GITHUB_WORKSPACE/combine_csvs_done.txt ]; then
          echo "Marker exists, skipping combine_csvs"
          exit 0
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Ensure you have a requirements.txt file

    - name: Decode and Save Google Cloud Credentials
      run: |
        echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" | base64 --decode > $HOME/google-credentials.json

    - name: Authenticate with Google Cloud
      run: gcloud auth activate-service-account --key-file=$HOME/google-credentials.json

    - name: Set environment variable for Python
      run: echo "GOOGLE_CREDENTIALS_JSON=$HOME/google-credentials.json" >> $GITHUB_ENV

    - name: Set environment variable for API_KEY
      run: echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV

    - name: Run combine_csvs script
      run: |
        python combine_csvs.py  # Run the combine CSV script
        # Create the marker file to indicate script completion
        echo "combine_csvs completed successfully" > $GITHUB_WORKSPACE/combine_csvs_done.txt

  update_database:
    runs-on: ubuntu-latest
    needs: combine_csvs  # This ensures that `update_database` runs only after `combine_csvs` finishes
    if: ${{ always() }}  # This makes sure `update_database` runs every time, even if combine_csvs didn't run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if marker file exists
        run: |
          if [ -f $GITHUB_WORKSPACE/combine_csvs_done.txt ]; then
            echo "Marker exists, proceeding with database update"
          else
            echo "No valid marker found, skipping database update"
            exit 0  # Exit without running the update if the marker doesn't exist

      - name: Run update_database script
        run: python update_database.py
